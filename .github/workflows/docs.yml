name: Build and publish docs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry and project dependencies
        uses: snok/install-poetry@v1
        with:
          version: latest

      - name: Install dependencies via Poetry
        run: |
          poetry config virtualenvs.create false
          poetry install --with dev,ci --no-interaction

      - name: Build HTML (via Make)
        run: |
          set -euo pipefail
          # Use the Makefile target so CI uses the same commands as local
          # development. The Make target uses `poetry run sphinx-build`.
          make docs-build

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/_build/html

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Download built docs
        uses: actions/download-artifact@v4
        with:
          name: docs-html
          path: docs-html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs-html'

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
